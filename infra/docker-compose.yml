services:
  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${REDIS_PORT}:6379"

  spark-master:
    image: bitnami/spark:3
    hostname: spark-master
    ports:
      - "${SPARK_MASTER_RPC_PORT}:7077"   # master RPC
      - "${SPARK_MASTER_UI_PORT}:8080"    # master UI
    environment:
      - SPARK_MODE=master
      - SPARK_UI_PORT=8080
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no

  spark-worker:
    image: bitnami/spark:3
    depends_on:
      - spark-master
    ports:
      - "${SPARK_WORKER_UI_PORT}:8081"    # worker UI
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:       ${POSTGRES_DB}
    volumes:
      - postgres_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-webserver:
    image: apache/airflow:2.9.1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR:        CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL:     redis://redis:${REDIS_PORT}/0
      AIRFLOW__CORE__LOAD_EXAMPLES:    "false"
      _PIP_ADDITIONAL_REQUIREMENTS:     "psycopg2-binary"
    volumes:
      - ../dags:/opt/airflow/dags
      - ../plugins:/opt/airflow/plugins
    ports:
      - "${AIRFLOW_PORT}:8080"
    command:
      bash -c "airflow db init &&
                      airflow users create \
                        --username admin \
                        --firstname Admin \
                        --lastname User \
                        --role Admin \
                        --email admin@example.com \
                        --password admin &&
                      airflow webserver"

  airflow-scheduler:
    image: apache/airflow:2.9.1
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR:        CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL:     redis://redis:${REDIS_PORT}/0
    volumes:
      - ../dags:/opt/airflow/dags
      - ../plugins:/opt/airflow/plugins
    command: >
         bash -c "
           airflow db init &&
           sleep 10 &&
           airflow scheduler
         "

  airflow-worker:
    image: apache/airflow:2.9.1
    depends_on:
      - redis
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR:        CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL:     redis://redis:${REDIS_PORT}/0
    volumes:
      - ../dags:/opt/airflow/dags
      - ../plugins:/opt/airflow/plugins
    command: >
         bash -c "
           airflow db init &&
           sleep 15 &&
           airflow celery worker
         "

  app:
    image: python:3.10-slim
    working_dir: /app
    volumes:
      - ../app:/app
      - ../data:/data
    environment:
      DATA_DIR: ${DATA_DIR}
    ports:
      - "${STREAMLIT_PORT}:8501"
    command: >
      bash -c "
        pip install --no-cache-dir -r requirements.txt &&
        streamlit run app.py --server.port=8501 --server.address=0.0.0.0
      "

volumes:
  postgres_db: